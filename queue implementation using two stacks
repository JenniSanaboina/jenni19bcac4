public class QueueUsingTwoStacks {
 
     private Stack stack1 = new Stack<>();
     private Stack stack2 = new Stack<>();
 
     public void enqueue(int val) {
        stack1.push(val);
     }
 
     public void dequeue() {
 
        if (stack2.isEmpty()) {
 
          if (stack1.isEmpty()) {
               System.out.println(" Cannot dequeue value. Queue is empty ");
 
           } else {
 
               while (!stack1.isEmpty()) {
                   stack2.push(stack1.pop());
               }
           }
        }
          System.out.println(stack2.pop());
     }
 
    public static void main(String[] args) {
 
          QueueUsingTwoStacks qu = new QueueUsingTwoStacks();
           qu.enqueue(3);
           qu.enqueue(4);
           qu.enqueue(5);
 
           qu.dequeue();
 
           qu.enqueue(6);
           qu.enqueue(7);
 
           qu.dequeue();
           qu.dequeue();
           qu.dequeue();
 
    }
}
